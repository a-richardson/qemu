#
# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright (c) 2020 Alex Richardson
# All rights reserved.
#
# This software was developed by SRI International and the University of
# Cambridge Computer Laboratory (Department of Computer Science and
# Technology) under DARPA contract HR0011-18-C-0016 ("ECATS"), as part of the
# DARPA SSITH research programme.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

# This is concatenated with insn32.decode for risc64 targets.
# Most of the fields and formats are there.

%cs2       20:5
%cs1       15:5
%cd         7:5

### Three operand instructions
@rcc     .......   ..... ..... ... ..... ....... &rcc     %rs2 %cs1 %cd
@ccr     .......   ..... ..... ... ..... ....... %cs2 %cs1 %rd
@ccc     .......   ..... ..... ... ..... ....... %cs2 %cs1 %cd

scbnds  0000111  ..... ..... 000 ..... 0110011 @rcc ?pred_cre
scbndsr 0000111  ..... ..... 001 ..... 0110011 @rcc ?pred_cre
cadd    0000110  ..... ..... 000 ..... 0110011 @rcc ?pred_cre
scaddr  0000110  ..... ..... 001 ..... 0110011 @rcc ?pred_cre
schi    0000110  ..... ..... 011 ..... 0110011 @rcc ?pred_cre
sceq    0000110  ..... ..... 100 ..... 0110011 @ccr ?pred_cre
acperm  0000110  ..... ..... 010 ..... 0110011 @rcc ?pred_cre
cbld    0000110  ..... ..... 101 ..... 0110011 @ccc ?pred_cre
scss    0000110  ..... ..... 110 ..... 0110011 @ccr ?pred_cre
scmode  0000110  ..... ..... 111 ..... 0110011 @rcc ?pred_cre ?pred_hybrid


### Two operands (source and dest)
cram        0001000  00111 ..... 000 ..... 0110011 @r2 ?pred_cre

@cc         .......  ..... ..... ... ..... ....... %cs1 %cd

sentry      0001000  01000 ..... 000 ..... 0110011 @cc ?pred_cre

@cr         .......  ..... ..... ... ..... ....... %cs1 %rd

gctag       0001000  00000 ..... 000 ..... 0110011 @cr ?pred_cre
gcperm      0001000  00001 ..... 000 ..... 0110011 @cr ?pred_cre
gcmode      0001000  00011 ..... 000 ..... 0110011 @cr ?pred_cre ?pred_hybrid
gchi        0001000  00100 ..... 000 ..... 0110011 @cr ?pred_cre
gcbase      0001000  00101 ..... 000 ..... 0110011 @cr ?pred_cre
gclen       0001000  00110 ..... 000 ..... 0110011 @cr ?pred_cre

# We have to add a new i format with unsigned immediate for scbndsi
%imm_i_unsigned    20:5
%imm_scale         25:1
@is_unsigned  ...... . ..... ..... ... ..... ....... scal=%imm_scale imm=%imm_i_unsigned     %cs1 %cd

scbndsi  000001 . ..... ..... 101 ..... 0010011 @is_unsigned ?pred_cre

@icc     ............    ..... ... ..... ....... &icc     imm=%imm_i %cs1 %cd
caddi         ............     ..... 010 ..... 0011011 @icc ?pred_cre

### Zero operands
modesw     0001001 00000 00000 001 00000 0110011 ?pred_hybrid ?pred_cre
